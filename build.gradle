buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.3"
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.5'
}

apply plugin: 'io.qameta.allure'

group 'saas-api-testing'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

allure {
    version = '2.7.0'
    autoconfigure = true
    aspectjweaver = true
    clean = true
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    testCompile 'io.rest-assured:rest-assured:4.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile 'io.rest-assured:json-path:4.1.0'
    testCompile 'io.rest-assured:xml-path:4.1.0'
    testCompile 'io.rest-assured:json-schema-validator:4.1.0'
    testCompile 'io.rest-assured:spring-mock-mvc:4.1.0'
    testRuntimeOnly('io.qameta.allure:allure-junit5:2.8.1')

    compile group: 'io.qameta.allure', name: 'allure-rest-assured', version: '2.12.1'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '4.0.0'
}

test {
    useJUnitPlatform{
        includeTags 'API'
    }
    options {
        systemProperties(System.getProperties());
    }


    testLogging {
        events "passed", "skipped", "failed"
    }
    testLogging.showStandardStreams = true
    ignoreFailures = true

    System.setProperty("allure.results.directory", "build/allure-results")


    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(5) ?: 1

    systemProperties = [
            'junit.jupiter.execution.parallel.enabled': true,
            'junit.jupiter.execution.parallel.config.strategy': 'fixed',
            'junit.jupiter.execution.parallel.config.fixed.parallelism': 3
    ]

    forkEvery = 1
}